import { Database } from '../database/database';
interface EnvObject {
    functions?: string;
    storage?: string;
    database?: string;
    default?: string;
}
interface Config {
    env?: String | EnvObject | Symbol;
    timeout?: Number | any;
}
declare class Cloud {
    get callFunction(): (...args: any[]) => any;
    get logger(): any;
    get getQQContext(): any;
    get uploadFile(): (...args: any[]) => any;
    get getTempFileURL(): (...args: any[]) => any;
    get deleteFile(): (...args: any[]) => any;
    get downloadFile(): (...args: any[]) => any;
    get registerExtension(): (...args: any[]) => any;
    get invokeExtension(): any;
    config: Config;
    private inited;
    constructor();
    get DYNAMIC_CURRENT_ENV(): symbol;
    init(options: Config): void;
    database(config?: {}): Database;
    wrapCommonAPICheck(func: any): (...args: any[]) => any;
    getTcbInstance({ config, type }?: {
        config?: {};
        type?: string;
    }): any;
    translateEnv(config?: Config, type?: string): any;
}
export { Cloud };
