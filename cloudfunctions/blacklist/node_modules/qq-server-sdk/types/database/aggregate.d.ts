declare class Aggregate {
    _aggregate: any;
    collectionName: any;
    database: any;
    constructor(_aggregate: any, collectionName: any, database: any);
    pushStage(stage: any, val: any): Aggregate;
    addFields(val: any): Aggregate;
    bucket(val: any): Aggregate;
    bucketAuto(val: any): Aggregate;
    collStats(val: any): Aggregate;
    count(val: any): Aggregate;
    facet(val: any): Aggregate;
    geoNear(val: any): Aggregate;
    graphLookup(val: any): Aggregate;
    group(val: any): Aggregate;
    indexStats(): Aggregate;
    limit(val: any): Aggregate;
    lookup(val: any): Aggregate;
    match(val: any): Aggregate;
    out(val: any): Aggregate;
    project(val: any): Aggregate;
    redact(val: any): Aggregate;
    replaceRoot(val: any): Aggregate;
    sample(val: any): Aggregate;
    skip(val: any): Aggregate;
    sort(val: any): Aggregate;
    sortByCount(val: any): Aggregate;
    unwind(val: any): Aggregate;
    end(): Promise<{
        list: any;
        errMsg: string;
    }>;
}
export { Aggregate };
