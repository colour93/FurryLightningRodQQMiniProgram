import { Cloud } from '../cloud';
import { CollectionReference } from './collection';
interface Config {
    env?: String | Symbol;
    throwOnNotFound?: boolean;
}
declare class Database {
    command: any;
    Geo: any;
    serverDate: any;
    RegExp: any;
    config: Config;
    cloud: Cloud;
    tcbInstance: any;
    _db: any;
    constructor(cloud: Cloud, config?: Config);
    collection(collectionName: any): CollectionReference;
    createCollection(collectionName: any): Promise<{
        errMsg: string;
        requestId: any;
    }>;
    startTransaction(): any;
    runTransaction(callback: Function, times?: number): any;
}
declare function getDatabase(cloud: any, config: any): Database;
export { getDatabase, Database };
